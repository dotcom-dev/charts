#
# General config
#
nameOverride: ""
fullNameOverride: ""

#
# Deployment
#
replicaCount: 1
image:
  pullPolicy: "Always"
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # command: []
  # args: []

imagePullSecrets: []

#env:
#  - name: "SERVICE_NAME"
#    value: {{ .Values.serviceName }}

#livenessProbe:
#  httpGet:
#    path: /
#    port: http

#readinessProbe:
#  httpGet:
#    path: /
#    port: http

#volumes:
#  - name: secretName
#    secret:
#      secretName: secretName
#      defaultMode: 420

#volumeMounts:
#  - name: secretName
#    mountPath: /usr/src/app/.env
#    subPath: .env

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

strategy: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#
# Service
#
service:
  enabled: true
  type: ClusterIP
  port: 3000

additionalServices: []

#
# Ingress
#
ingress:
  enabled: false
  annotations:
#    cert-manager.io/cluster-issuer: "letsencrypt-production"
#    cert-manager.io/acme-challenge-type: http01
#    nginx.ingress.kubernetes.io/ssl-redirect: "true"
#    nginx.ingress.kubernetes.io/proxy-buffering: "on"
#    nginx.ingress.kubernetes.io/client-body-buffer-size: 120m
#    nginx.ingress.kubernetes.io/client-max-body-size: 120m
#    nginx.ingress.kubernetes.io/proxy-body-size: 120m
#    nginx.ingress.kubernetes.io/proxy-buffer-size: 120m
#    nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
  hosts:
    - host: ""
      paths:
        - pathType: ImplementationSpecific
  tls: []
#    - secretName: chart-example-tls
#      hosts:
#        - chart-example.local

additionalIngresses: []

networkPolicy:
  enabled: false
